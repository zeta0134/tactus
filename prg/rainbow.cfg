MEMORY {
    ZEROPAGE:        start = $00,   size = $100,  type = rw;
    SHADOW_OAM:       start = $0200, size = $100,  type = rw;
    RAM:       start = $0300, size = $500,  type = rw;
    PRGRAM:       start = $6800, size = $1800,  type = rw;
    HDR:           start = $0000, size = $10,   type = ro, file = %O, fill = yes;

    PRG0_8000:     start = $8000, size = $2000, type = ro, file = %O, fill = yes, fillval = $FF, bank = $00;
    PRG1_8000:     start = $8000, size = $2000, type = ro, file = %O, fill = yes, fillval = $FF, bank = $01;
    PRG2_8000:     start = $8000, size = $2000, type = ro, file = %O, fill = yes, fillval = $FF, bank = $02;
    PRGFIXED_E000: start = $E000, size = $2000, type = ro, file = %O, fill = yes, fillval = $FF, bank = $03;
    PRG3_8000:     start = $8000, size = $2000, type = ro, file = %O, fill = yes, fillval = $FF, bank = $04;
    PRG4_8000:     start = $8000, size = $2000, type = ro, file = %O, fill = yes, fillval = $FF, bank = $05;
    PRG5_8000:     start = $8000, size = $2000, type = ro, file = %O, fill = yes, fillval = $FF, bank = $06;
    PRG6_8000:     start = $8000, size = $2000, type = ro, file = %O, fill = yes, fillval = $FF, bank = $07;

    PRG7_A000:    start = $A000, size = $2000, type = ro, file = %O, fill = yes, fillval = $FF, bank = $08;
    PRG8_A000:    start = $A000, size = $2000, type = ro, file = %O, fill = yes, fillval = $FF, bank = $09;
    PRG9_A000:    start = $A000, size = $2000, type = ro, file = %O, fill = yes, fillval = $FF, bank = $0A;
    PRG10_A000:    start = $A000, size = $2000, type = ro, file = %O, fill = yes, fillval = $FF, bank = $0B;
    PRG11_A000:    start = $A000, size = $2000, type = ro, file = %O, fill = yes, fillval = $FF, bank = $0C;
    PRG12_A000:    start = $A000, size = $2000, type = ro, file = %O, fill = yes, fillval = $FF, bank = $0D;
    PRG13_A000:    start = $A000, size = $2000, type = ro, file = %O, fill = yes, fillval = $FF, bank = $0E;

    PRG14_C000:    start = $C000, size = $2000, type = ro, file = %O, fill = yes, fillval = $FF, bank = $0F;
}

SEGMENTS {
   ZEROPAGE:  load = ZEROPAGE,  type = zp;
   BSS:        load = RAM,        type = bss, align = $100, define = yes;
   RAM:        load = RAM,        type = bss, start = $0300;
   PRGRAM:     load = PRGRAM,     type = bss, start = $6800;
   HEADER:     load = HDR,        type = ro,  align = $10;

   # Code banks for large bits of the engine that we want to track explicitly
   CODE_SOUND_ENGINE:  load = PRG0_8000,       type = ro,  start = $8000;
   CODE_BHOP:  load = PRG1_8000,       type = ro,  start = $8000;

   # Arbitrary code banks
   CODE_0:  load = PRG2_8000,       type = ro,  start = $8000;
   CODE_1:  load = PRG3_8000,       type = ro,  start = $8000;
   CODE_2:  load = PRG4_8000,       type = ro,  start = $8000;
   CODE_3:  load = PRG5_8000,       type = ro,  start = $8000;
   CODE_4:  load = PRG6_8000,       type = ro,  start = $8000;

   DATA_0: load = PRG7_A000,       type = ro,  start = $A000;
   DATA_1: load = PRG8_A000,       type = ro,  start = $A000;
   DATA_2: load = PRG9_A000,       type = ro,  start = $A000;
   DATA_3: load = PRG10_A000,       type = ro,  start = $A000;
   DATA_4: load = PRG11_A000,       type = ro,  start = $A000;
   DATA_5: load = PRG12_A000,       type = ro,  start = $A000;
   DATA_6: load = PRG13_A000,       type = ro,  start = $A000;

   DPCM_6: load = PRG14_C000,       type = ro,  start = $C000;

   PRGFIXED_E000:  load = PRGFIXED_E000,  type = ro,  start = $E000;
   VECTORS:    load = PRGFIXED_E000,  type = ro,  start = $FFFA;
}

SYMBOLS {
   __ZPCM_ADDRESS__:  type = export, value = $4011;
}

FILES {
   %O:   format = bin;
}